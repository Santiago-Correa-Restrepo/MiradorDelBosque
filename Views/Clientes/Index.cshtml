@model IEnumerable<Ultima.Models.Cliente>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/tablastyle.css" rel="stylesheet" />

<h1 class="text text-center">Clientes</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<form id="antiforgery-form" method="post">
    @Html.AntiForgeryToken()
</form>

<p>
    <a class="btn btn-success" style="margin-left: 90%;" asp-action="Create">Crear Cliente</a>
</p>

<table id="servicio" class="table custom-table table-striped">
    <thead>
        <tr class="table-header">
            <th>
                @Html.DisplayNameFor(model => model.Nombres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apellidos)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Celular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Correo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NroDocumento)
            </th>
            <th>
                Estado
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-row">
                <td>
                    @Html.DisplayFor(modelItem => item.Nombres)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Apellidos)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Celular)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Correo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NroDocumento)
                </td>
                <td style="padding: 10px; text-align: center;">
                    <span id="estado-texto-@item.NroDocumento" style="color: @(item.Estado ? "green" : "black"); font-weight: bold;">
                        @(item.Estado ? "Activo" : "Inactivo")
                    </span>
                    <div class="form-check form-switch d-inline-flex justify-content-center" style="margin-left: 10px;">
                        <input class="form-check-input" type="checkbox" id="estado_@item.NroDocumento"
                        @(item.Estado ? "checked" : "")
                               onchange="updateEstado(@item.NroDocumento, this.checked)">
                        <label class="form-check-label" for="estado_@item.NroDocumento"></label>
                    </div>
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-warning btn-sm" asp-route-id="@item.NroDocumento">Editar</a>
                    <a asp-action="Details" class="btn btn-info btn-sm" asp-route-id="@item.NroDocumento">Detalles</a>
                    <a href="javascript:void(0);" class="btn btn-danger btn-sm delete-btn"
                       data-bs-toggle="modal" data-bs-target="#deleteModal"
                       data-id="@item.NroDocumento">
                        Eliminar
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content text-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar este cliente? Esta acción no se puede deshacer.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let table = new DataTable('#servicio');
    </script>
    <script>
        function updateEstado(id, estado) {
            $.ajax({
                url: '@Url.Action("UpdateEstado", "Clientes")',
                type: 'POST',
                data: { id: id, estado: estado },
                success: function (response) {
                    if (response.success) {
                        var estadoTexto = estado ? "Activo" : "Inactivo";
                        var estadoColor = estado ? "green" : "black";

                        // Cambiar el texto y color del estado en la tabla
                        $("#estado-texto-" + id).text(estadoTexto).css("color", estadoColor);

                        // Cambiar el estado en el switch de la vista de edición si está presente
                        var editSwitch = document.getElementById("flexSwitchCheckChecked");
                        if (editSwitch) {
                            editSwitch.checked = estado;
                        }

                        console.log('Estado actualizado exitosamente');
                    } else {
                        console.error(response.message);
                    }
                },
                error: function () {
                    console.error('Error al actualizar el estado');
                }
            });
        }
    </script>
    <script>
        $(document).ready(function () {
            let clienteId = 0;

            // Capturar el ID del cliente al abrir el modal
            $('.delete-btn').on('click', function () {
                clienteId = $(this).data('id');
            });

            // Confirmar eliminación
            $('#confirmDelete').on('click', function () {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/Clientes/Delete/${clienteId}`;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = $('input[name="__RequestVerificationToken"]').val();
                form.appendChild(tokenInput);
                document.body.appendChild(form);
                form.submit();
            });
        });
    </script>
}
